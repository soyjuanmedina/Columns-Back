{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_services/auth.service.ts","webpack:///src/app/_services/token-storage.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/components/businessTypes/hosteleria/hosteleria.component.ts","webpack:///src/app/components/businessTypes/hosteleria/hosteleria.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/pages/calculadora-costes/calculadora-costes.page.ts","webpack:///src/app/pages/calculadora-costes/calculadora-costes.page.html","webpack:///src/app/pages/calculadora-precios/calculadora-precios.page.ts","webpack:///src/app/pages/calculadora-precios/calculadora-precios.page.html","webpack:///src/app/pages/contact/contact.page.ts","webpack:///src/app/pages/contact/contact.page.html","webpack:///src/app/pages/index.pages.ts","webpack:///src/app/pages/profile/profile.page.ts/profile.page.ts","webpack:///src/app/pages/profile/profile.page.ts/profile.page.html","webpack:///src/app/pages/register/register.page.ts","webpack:///src/app/pages/register/register.page.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AUTH_API","httpOptions","headers","AuthService","http","credentials","post","username","password","user","email","providedIn","TOKEN_KEY","USER_KEY","TokenStorageService","window","sessionStorage","clear","token","removeItem","setItem","getItem","JSON","stringify","parse","appRoutes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","useHash","preloadingStrategy","imports","AppComponent","tokenStorageService","isLoggedIn","showAdminBoard","showModeratorBoard","title","getToken","getUser","roles","includes","signOut","location","reload","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AppService","HosteleriaBusiness","business","type","name","customers","esteemed","commentary","averageTicket","monthly","incomes","costs","fixed","amount","variables","totalRevenue","totalFixedCosts","totalVariableExpends","result","calculated","step","newAccountingNote","accountingNoteName","accountingNoteAmount","accountingNoteCommentary","selectedArray","unshift","array","accountingNote","filter","el","newIncome","incomeName","incomeAmount","income","newFixedCost","fixedCostName","fixedCostAmount","fixedCosts","fixedCost","newVariableExpend","variableExpendName","variableExpendAmount","variableExpends","variableExpend","href","isNaN","console","log","setTimeout","example","calcAgain","addAccountingNote","loadExample","NavbarComponent","authService","tokenStorage","form","isLoginFailed","errorMessage","login","subscribe","data","saveToken","accessToken","saveUser","reloadPage","err","error","message","CalculadoraDeCostesPage","businessTypes","isSuccessful","isSignUpFailed","navigateToBusiness","CalculadoraDePreciosPage","rawMaterial","handling","priceResult","calculatePrice","ContactPage","thanks","self","$","value","reason","contactMe","ProfilePage","currentUser","RegisterPage","register","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst AUTH_API = 'http://localhost:8080/api/auth/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(credentials): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signin', {\r\n      username: credentials.username,\r\n      password: credentials.password\r\n    }, httpOptions);\r\n  }\r\n\r\n  register(user): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signup', {\r\n      username: user.username,\r\n      email: user.email,\r\n      password: user.password\r\n    }, httpOptions);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'auth-token';\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n\r\n  constructor() { }\r\n\r\n  signOut(): void {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string): void {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(user): void {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser(): any {\r\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes, PreloadAllModules } from '@angular/router';\r\n\r\n\r\n// Pages\r\nimport {\r\n  CalculadoraDeCostesPage,\r\n  CalculadoraDePreciosPage,\r\n  ContactPage\r\n} from \"@pages/index.pages\";\r\nimport { ProfilePage } from './pages/profile/profile.page.ts/profile.page';\r\nimport { RegisterPage } from './pages/register/register.page';\r\n\r\n\r\n// Routes configuration\r\nconst appRoutes: Routes = [\r\n  { path: 'c', component: CalculadoraDeCostesPage },\r\n  { path: 'calculadoradeprecios', component: CalculadoraDePreciosPage },\r\n  { path: 'register', component: RegisterPage },\r\n  { path: 'profile', component: ProfilePage },\r\n  { path: 'contacto', component: ContactPage },\r\n  { path: '**', redirectTo: 'c', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes, { useHash: true, preloadingStrategy: PreloadAllModules })\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\n\r\nexport class AppRoutingModule {\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { TokenStorageService } from './_services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  private roles: string[];\r\n  isLoggedIn = false;\r\n  showAdminBoard = false;\r\n  showModeratorBoard = false;\r\n  username: string;\r\n  title = 'calculadoradecostes';\r\n\r\n  constructor(private tokenStorageService: TokenStorageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n\r\n    if (this.isLoggedIn) {\r\n      const user = this.tokenStorageService.getUser();\r\n      this.roles = user.roles;\r\n\r\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\r\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\r\n\r\n      this.username = user.username;\r\n    }\r\n  }\r\n\r\n  logout(): void {\r\n    this.tokenStorageService.signOut();\r\n    window.location.reload();\r\n  }\r\n\r\n}\r\n","<div id=\"container\">\r\n\r\n  <div id=\"header\">\r\n    <navbar-component></navbar-component>\r\n  </div>\r\n\r\n  <div id=\"body\">\r\n    <div class=\"container main-container\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"footer\">\r\n\r\n  </div>\r\n\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { CalculadoraDeCostesPage } from './pages/calculadora-costes/calculadora-costes.page';\r\nimport { CalculadoraDePreciosPage } from './pages/calculadora-precios/calculadora-precios.page';\r\nimport { ContactPage } from './pages/contact/contact.page';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HosteleriaBusiness } from './components/businessTypes/hosteleria/hosteleria.component';\r\nimport { AppService } from './app.service';\r\nimport { RegisterPage } from './pages/register/register.page';\r\nimport { ProfilePage } from './pages/profile/profile.page.ts/profile.page';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    CalculadoraDeCostesPage,\r\n    CalculadoraDePreciosPage,\r\n    ContactPage,\r\n    HosteleriaBusiness,\r\n    RegisterPage,\r\n    ProfilePage\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [AppService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { AccountingNote } from '../../../interfaces/accountingNote';\nimport { Business } from '../../../interfaces/business';\nimport examples from \"../../../examples/hostelry.json\";\ndeclare var $: any;\n\n@Component({\n  selector: 'business-hosteleria',\n  templateUrl: './hosteleria.component.html',\n  styleUrls: ['./hosteleria.component.scss']\n})\nexport class HosteleriaBusiness implements OnInit {\n  business: Business = {\n    type: \"Hostelería\",\n    name,\n    customers: {\n      esteemed: 0,\n      commentary: '',\n      averageTicket: 0,\n      monthly: false\n    },\n    incomes: [],\n    costs: {\n      fixed: [\n        {\n          name: 'Alquiler',\n          amount: 0\n        },\n        {\n          name: 'Personal',\n          amount: 0\n        },\n        {\n          name: 'Gestoria',\n          amount: 0\n        }\n      ],\n      variables: [\n        {\n          name: 'Luz',\n          amount: 0\n        },\n        {\n          name: 'Agua',\n          amount: 0\n        },\n        {\n          name: 'Teléfono',\n          amount: 0\n        }\n      ]\n    }\n  };\n  selectedArray;\n  accountingNoteName;\n  accountingNoteAmount;\n  accountingNoteCommentary;\n\n\n  incomeName;\n  incomeAmount;\n  fixedCostName;\n  fixedCostAmount;\n  variableExpendName;\n  variableExpendAmount;\n  totalRevenue = 0;\n  totalFixedCosts = 0;\n  totalVariableExpends = 0;\n  result = null;\n  calculated = false;\n  step = 0;\n  constructor() { }\n\n\n  addAccountingNote() {\n    let newAccountingNote: AccountingNote = {\n      name: this.accountingNoteName,\n      amount: this.accountingNoteAmount,\n      commentary: this.accountingNoteCommentary\n    }\n    this.selectedArray.unshift(newAccountingNote);\n  }\n\n  deleteAccountingNote(type, array, accountingNote) {\n    if (type == 'incomes') {\n      this.business.incomes = array.filter(function (el) { return el !== accountingNote; });\n    } else if (type == 'fixedCost') {\n      this.business.costs.fixed = array.filter(function (el) { return el !== accountingNote; });\n    } else if (type == 'variableCost') {\n      this.business.costs.variables = array.filter(function (el) { return el !== accountingNote; });\n    }\n  }\n\n  addIncome() {\n    let newIncome: AccountingNote = {\n      name: this.incomeName,\n      amount: this.incomeAmount\n    }\n    this.business.incomes.unshift(newIncome);\n  }\n\n  deleteIncome(incomes, income) {\n    this.business.incomes = incomes.filter(function (el) { return el !== income; });\n  }\n\n  addFixedCost() {\n    let newFixedCost: AccountingNote = {\n      name: this.fixedCostName,\n      amount: this.fixedCostAmount\n    }\n    this.business.incomes.unshift(newFixedCost);\n  }\n\n  deleteFixedCost(fixedCosts, fixedCost) {\n    this.business.costs.fixed = fixedCosts.filter(function (el) { return el !== fixedCost; });\n  }\n\n  addVariableExpend() {\n    let newVariableExpend: AccountingNote = {\n      name: this.variableExpendName,\n      amount: this.variableExpendAmount\n    }\n    this.business.incomes.unshift(newVariableExpend);\n  }\n\n  deleteVariableExpend(variableExpends, variableExpend) {\n    this.business.costs.variables = variableExpends.filter(function (el) { return el !== variableExpend; });\n  }\n\n  next() {\n    this.step = this.step + 1;\n    location.href = '#section' + this.step;\n  }\n\n  calculate() {\n    this.calculated = true;\n    location.href = '#result'\n    this.totalRevenue = this.business.customers.esteemed * this.business.customers.averageTicket;\n    if (!this.business.customers.monthly) {\n      this.totalRevenue = this.totalRevenue * 30;\n    }\n    for (const income in this.business.incomes) {\n      let amount = this.business.incomes[income].amount;\n      this.totalRevenue = this.totalRevenue + amount\n    }\n    for (const fixedCost in this.business.costs.fixed) {\n      let amount = this.business.costs.fixed[fixedCost].amount;\n      this.totalFixedCosts = this.totalFixedCosts + amount\n    }\n    for (const variableExpend in this.business.costs.variables) {\n      let amount = this.business.costs.variables[variableExpend].amount;\n      this.totalVariableExpends = this.totalVariableExpends + amount\n    }\n    this.result = this.totalRevenue - this.totalFixedCosts - this.totalVariableExpends;\n    if (isNaN(this.result)) {\n      this.result = 0;\n    }\n    console.log(this.calculated, typeof (this.result), this.result.isNaN, isNaN(this.result))\n  }\n\n  calcAgain() {\n    location.href = '#section0';\n    setTimeout(() => {                           //<<<---using ()=> syntax\n      this.result = 0;\n      this.step = 0;\n      this.calculated = false;\n    }, 500);\n  }\n\n  loadExample(example) {\n    console.log(examples);\n    this.step = 3;\n    this.business = examples.filter(function (el) { return el.id == example; })[0];\n    setTimeout(() => {\n      location.href = '#nombre'\n    }, 500);\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n  <div class=\"col-lg-12 ml-auto top-30\" id=\"section0\">\n    <p class=\"lead\">Un restaurante, ¡¡estupendo!!. Bueno, lo primero de todo vamos a ponerle nombre.\n      También, si lo deseas, puedes cargar algunos de nuestros ejemplos para inspirarte.\n    </p>\n  </div>\n\n  <div class=\"clearfix\">\n    <div class=\"float-right\">\n      <button type=\"button\" class=\"btn btn-primary btn-sm bottom-30\" data-toggle=\"modal\"\n        data-target=\"#loadExampleModal\">\n        Cargar ejemplo <i class=\"fas fa-question-circle\"></i>\n      </button>\n    </div>\n  </div>\n\n  <div class=\"card\" id=\"nombre\">\n    <div class=\"card-header\">\n      <h5>Nombre</h5>\n    </div>\n    <div class=\"card-body\">\n\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-12\">\n          <label for=\"business.name\">Nombre</label>\n          <input type=\"text\" class=\"form-control\" id=\"business.name\" placeholder=\"Nombre\"\n            [(ngModel)]=\"business.name\" [name]=\"business.name\">\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n<div [hidden]=\"step < 1\" id=\"section1\">\n  <div class=\"col-lg-12 ml-auto top-30\">\n    <p class=\"lead\">Fenomeno, seguro que {{business.name}} será todo un éxito, pero para\n      lograrlo vamos a hacer algunos cálculos. De momento vamos a calcular los ingresos\n      previstos.\n    </p>\n  </div>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h5>Ingresos</h5>\n    </div>\n    <div class=\"card-body\">\n      <h6 class=\"card-title\">Clientes</h6>\n      <p class=\"lead\">Supone la principal fuente de ingresos de un negocio de hosteleria,\n        vamos a estimar la cantidad de clientes por mes y su ticket medio. Puedes añadir comentarios\n        para justificar tus cálculos.\n      </p>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label for=\"business.customers.esteemed\">\n            Clientes\n            <span *ngIf=\"!business.customers.monthly\">diarios</span>\n            <span *ngIf=\"business.customers.monthly\">mensuales</span>\n            estimados\n          </label>\n          <input type=\"number\" class=\"form-control\" id=\"business.customers.esteemed\"\n            placeholder=\"Clientes\" [(ngModel)]=\"business.customers.esteemed\"\n            [name]=\"business.customers.esteemed\">\n        </div>\n        <div class=\"form-group col-md-6\">\n          <label for=\"business.customers.averageTicket\">Ticket medio</label>\n          <input type=\"number\" class=\"form-control\" id=\"business.customers.averageTicket\"\n            placeholder=\"Ticket medio\" [(ngModel)]=\"business.customers.averageTicket\"\n            [name]=\"business.customers.averageTicket\">\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"business.customers.monthly\"\n            [(ngModel)]=\"business.customers.monthly\" [name]=\"business.customers.monthly\">\n          <label class=\"form-check-label\" for=\"business.customers.monthly\">\n            Mensuales\n          </label>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"business.customers.commentary\">Comentarios</label>\n        <textarea class=\"form-control\" id=\"business.customers.commentary\" rows=\"3\"\n          [(ngModel)]=\"business.customers.commentary\"\n          [name]=\"business.customers.commentary\"></textarea>\n      </div>\n\n      <h6 class=\"card-title\">Otros ingresos</h6>\n      <p class=\"lead\">Quizá hayas pensado obtener ingresos por otros medios,\n        como por ejemplo la venta de merchandising. Si es así, este es el lugar para añadirlos.\n        Una vez que hayas añadido todos los ingresos que esperas obtener pulsa el botón\n        continuar. Recuerda que los comentarios ayudarán a los inversores a comprender tus números\n      </p>\n\n      <div class=\"col-lg-12 mx-auto top-30 clearfix\">\n        <div class=\"float-right\">\n          <button type=\"button\" class=\"btn btn-primary btn-sm\" data-toggle=\"modal\"\n            data-target=\"#addAccountingNoteModal\" (click)=\"selectedArray = business.incomes\">\n            Añadir Ingreso\n          </button>\n        </div>\n      </div>\n\n      <div class=\"form-row top-30\" *ngFor=\"let income of business.incomes\">\n        <h6>{{income.name}}</h6>\n        <div class=\"col-md-12\" *ngIf=\"income.commentary\">\n          <textarea class=\"form-control\" id=\"income.commentary\" rows=\"2\"\n            [(ngModel)]=\"income.commentary\" [name]=\"income.commentary\"></textarea>\n        </div>\n        <div class=\"col-md-12\" [ngClass]=\"{'top-30': income.commentary }\">\n          <div class=\"input-group\">\n            <input type=\"number\" class=\"form-control\" [id]=\"income.name\" [value]=\"income.amount\"\n              [(ngModel)]=\"income.amount\" [name]=\"income.name\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"validationTooltipUsernamePrepend\"\n                (click)=\"deleteAccountingNote('incomes', business.incomes, income)\"><i\n                  class=\"fas fa-trash-alt float-right text-danger\"></i></span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>\n\n<div [hidden]=\"step < 2\" id=\"section2\">\n  <div class=\"col-lg-12 ml-auto top-30\">\n    <p class=\"lead\">Ahora tenemos que tener en cuenta los gastos. Estos los vamos a dividir\n      entre los fijos y los variables.\n    </p>\n  </div>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h5>Gastos fijos</h5>\n    </div>\n    <div class=\"card-body\">\n      <p class=\"lead\">Los gastos fijos de la hostelería suelen incluir el alquiler, personal,\n        gestoria\n        y otros, pero no dudes en añadir o eliminar los que necesites.\n        Una vez que hayas añadido todos los gastos fijos que esperas tener pulsa el botón\n        continuar.\n      </p>\n\n      <div class=\"col-lg-12 mx-auto top-30 clearfix\">\n        <div class=\"float-right\">\n          <button type=\"button\" class=\"btn btn-primary btn-sm\" data-toggle=\"modal\"\n            data-target=\"#addAccountingNoteModal\" (click)=\"selectedArray = business.costs.fixed\">\n            Añadir Gasto Fijo\n          </button>\n        </div>\n      </div>\n\n      <div class=\"form-row top-30\" *ngFor=\"let fixedCost of business.costs.fixed\">\n        <h6>{{fixedCost.name}}</h6>\n        <div class=\"col-md-12\" *ngIf=\"fixedCost.commentary\">\n          <textarea class=\"form-control\" id=\"fixedCost.commentary\" rows=\"2\"\n            [(ngModel)]=\"fixedCost.commentary\" [name]=\"fixedCost.commentary\"></textarea>\n        </div>\n        <div class=\"col-md-12\" [ngClass]=\"{'top-30': fixedCost.commentary }\">\n          <div class=\"input-group\">\n            <input type=\"number\" class=\"form-control\" [id]=\"fixedCost.name\"\n              [value]=\"fixedCost.amount\" [(ngModel)]=\"fixedCost.amount\" [name]=\"fixedCost.name\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"validationTooltipUsernamePrepend\"\n                (click)=\"deleteAccountingNote('fixedCost', business.costs.fixed, fixedCost)\"><i\n                  class=\"fas fa-trash-alt float-right text-danger\"></i></span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>\n\n<div [hidden]=\"step < 3\" id=\"section3\" class=\"top-30\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h5>Gastos variables</h5>\n    </div>\n    <div class=\"card-body\">\n\n      <p class=\"lead\">Los gastos variables de la hostelería suelen incluir la luz,\n        el agua, el teléfono y otros, así que no dudes en añadir o eliminar los que\n        tendrás en tu negocio.\n        Una vez que hayas añadido todos los gastos variables que esperas tener pulsa el botón\n        calcular y veremos la viabilidad de tu negocio.\n      </p>\n\n      <div class=\"col-lg-12 mx-auto top-30 clearfix\">\n        <div class=\"float-right\">\n          <button type=\"button\" class=\"btn btn-primary btn-sm\" data-toggle=\"modal\"\n            data-target=\"#addAccountingNoteModal\"\n            (click)=\"selectedArray = business.costs.variables\">\n            Añadir Gasto Variable\n          </button>\n        </div>\n      </div>\n\n      <div class=\"form-row top-30\" *ngFor=\"let variableCost of business.costs.variables\">\n        <h6>{{variableCost.name}}</h6>\n        <div class=\"col-md-12\" *ngIf=\"variableCost.commentary\">\n          <textarea class=\"form-control\" id=\"variableCost.commentary\" rows=\"2\"\n            [(ngModel)]=\"variableCost.commentary\" [name]=\"variableCost.commentary\"></textarea>\n        </div>\n        <div class=\"col-md-12\" [ngClass]=\"{'top-30': variableCost.commentary }\">\n          <div class=\"input-group\">\n            <input type=\"number\" class=\"form-control\" [id]=\"variableCost.name\"\n              [value]=\"variableCost.amount\" [(ngModel)]=\"variableCost.amount\"\n              [name]=\"variableCost.name\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"validationTooltipUsernamePrepend\"\n                (click)=\"deleteAccountingNote('variableCost', business.costs.variables, variableCost)\"><i\n                  class=\"fas fa-trash-alt float-right text-danger\"></i></span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>\n\n<div class=\"col-lg-12 mx-auto top-30 bottom-30\" *ngIf=\"step < 3\">\n  <button type=\"button\" class=\"btn btn-primary btn-lg btn-block\" (click)=\"next()\">Continuar\n  </button>\n</div>\n\n<div class=\"col-lg-12 mx-auto top-100 bottom-30\" *ngIf=\"step >= 3\">\n  <button type=\"button\" class=\"btn btn-primary btn-lg btn-block\" (click)=\"calculate()\">Calcular\n  </button>\n</div>\n<section [hidden]=\"!calculated\" [ngClass]=\"{'bg-primary': result > 0, 'bg-danger': result <= 0 }\"\n  class=\"page-section bg-primary text-white mb-0\" id=\"result\">\n  <div class=\"container\">\n    <!-- Section Heading-->\n    <h2 class=\"page-section-heading text-center text-uppercase text-white\">Resultado</h2>\n    <!-- Icon Divider-->\n    <div class=\"divider-custom divider-light\">\n      <div class=\"divider-custom-line\"></div>\n      <div class=\"divider-custom-icon\"><i class=\"fas fa-star\"></i></div>\n      <div class=\"divider-custom-line\"></div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-12 ml-auto text-center\">\n        <p class=\"lead\" *ngIf=\"result >= 0\">¡¡Enhorabuena!! {{business.name}} Parece que es viable\n        </p>\n        <p class=\"lead\" *ngIf=\"result < 0\">!!Ups!! {{business.name}} no alcanza el punto de\n          equilibrio, quizá valga la pena revisar esos números.\n        </p>\n        <p class=\"lead\">Los ingresos previstos son: {{totalRevenue}}</p>\n        <p class=\"lead\">Los gastos fijos son: {{totalFixedCosts}}</p>\n        <p class=\"lead\">Los gastos varriables son: {{totalVariableExpends}}</p>\n        <p class=\"lead\">Lo que te llevaría a unos\n          <span *ngIf=\"result < 0\">gastos</span><span *ngIf=\"result >= 0\">beneficios</span>\n          mensuales de: {{result}}</p>\n      </div>\n\n    </div>\n    <div class=\"text-center mt-4\">\n      <div class=\"btn btn-xl btn-outline-light\" (click)=\"calcAgain()\">\n        Volver a calcular\n      </div>\n    </div>\n  </div>\n</section>\n\n<!-- Modal addAccountingNoteModal -->\n<div class=\"modal fade\" id=\"addAccountingNoteModal\" tabindex=\"-1\" role=\"dialog\"\n  aria-labelledby=\"addAccountingNoteModal\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"addAccountingNoteModal\">Añadir Movimiento contable</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <h6>asdfsafds</h6>\n        <label for=\"accountingNoteName\">Nombre</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"accountingNoteName\"\n          id=\"accountingNoteName\">\n\n        <label for=\"accountingNoteAmount\">Ingreso</label>\n        <input type=\"number\" class=\"form-control\" [(ngModel)]=\"accountingNoteAmount\"\n          id=\"accountingNoteAmount\">\n\n        <label for=\"accountingNoteCommentary\">Comentario</label>\n        <textarea class=\"form-control\" id=\"accountingNoteCommentary\" rows=\"3\"\n          [(ngModel)]=\"accountingNoteCommentary\" [name]=\"accountingNoteCommentary\"></textarea>\n\n\n        <button class=\"btn btn-primary top-30\" data-dismiss=\"modal\" (click)=\"addAccountingNote()\">\n          Añadir\n        </button>\n\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal loadExampleModal -->\n<div class=\"modal fade\" id=\"loadExampleModal\" tabindex=\"-1\" role=\"dialog\"\n  aria-labelledby=\"loadExampleModal\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"loadExampleModal\">Cargar Ejemplo</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <button class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"loadExample('lacueva')\">\n          La Cueva\n        </button>\n\n        <button class=\"btn btn-primary ml-1\" data-dismiss=\"modal\" (click)=\"loadExample('elveloz')\">\n          Catering El Veloz\n        </button>\n\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../_services/auth.service';\r\nimport { TokenStorageService } from '../../_services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'navbar-component',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  form: any = {};\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  errorMessage = '';\r\n  roles: string[] = [];\r\n\r\n  constructor(private authService: AuthService,\r\n    private tokenStorage: TokenStorageService) { }\r\n\r\n  onSubmit(): void {\r\n    this.authService.login(this.form).subscribe(\r\n      data => {\r\n        this.tokenStorage.saveToken(data.accessToken);\r\n        this.tokenStorage.saveUser(data);\r\n\r\n        this.isLoginFailed = false;\r\n        this.isLoggedIn = true;\r\n        this.roles = this.tokenStorage.getUser().roles;\r\n        this.reloadPage();\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isLoginFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  reloadPage(): void {\r\n    window.location.reload();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getUser().roles;\r\n    }\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg bg-secondary text-uppercase\" id=\"mainNav\">\r\n  <div class=\"container\">\r\n    <div class=\"navbar-brand js-scroll-trigger\">Calculadoras para Startups</div>\r\n    <button\r\n      class=\"navbar-toggler navbar-toggler-right text-uppercase font-weight-bold bg-primary text-white rounded\"\r\n      type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\"\r\n      aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      Menu\r\n      <i class=\"fas fa-bars\"></i>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n        <li class=\"nav-item mx-0 mx-lg-1\" routerLinkActive=\"active\"><a\r\n            class=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\"\r\n            [routerLink]=\"['/c']\">Calculadora de\r\n            costes</a>\r\n        </li>\r\n        <li class=\"nav-item mx-0 mx-lg-1\" routerLinkActive=\"active\"><a\r\n            class=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\"\r\n            [routerLink]=\"['/contacto']\">Contacto</a>\r\n        </li>\r\n        <li class=\"nav-item mx-0 mx-lg-1\" routerLinkActive=\"active\"><a\r\n            class=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\"\r\n            [routerLink]=\"['/contacto']\">Registro</a>\r\n        </li>\r\n      </ul>\r\n\r\n      <button type=\"button\" class=\"btn btn-primary btn-sm bottom-30\" data-toggle=\"modal\"\r\n        data-target=\"#LoginModal\">\r\n        Login <i class=\"fas fa-question-circle\"></i></button>\r\n\r\n      <button type=\"button\" class=\"btn btn-primary btn-sm bottom-30\" [routerLink]=\"['/register']\">\r\n        Registro <i class=\"fas fa-question-circle\"></i></button>\r\n\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n\r\n<!-- Modal LoginModal -->\r\n<div class=\"modal fade\" id=\"LoginModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"LoginModal\"\r\n  aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"LoginModal\">Login</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n\r\n        <div class=\"col-md-12\">\r\n          <div class=\"card card-container\">\r\n            <img id=\"profile-img\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n              class=\"profile-img-card\" />\r\n            <form *ngIf=\"!isLoggedIn\" name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n              #f=\"ngForm\" novalidate>\r\n              <div class=\"form-group\">\r\n                <label for=\"username\">Username</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"form.username\"\r\n                  required #username=\"ngModel\" />\r\n                <div class=\"alert alert-danger\" role=\"alert\"\r\n                  *ngIf=\"f.submitted && username.invalid\">\r\n                  Username is required!\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input type=\"password\" class=\"form-control\" name=\"password\"\r\n                  [(ngModel)]=\"form.password\" required minlength=\"6\" #password=\"ngModel\" />\r\n                <div class=\"alert alert-danger\" role=\"alert\"\r\n                  *ngIf=\"f.submitted && password.invalid\">\r\n                  <div *ngIf=\"password.errors.required\">Password is required</div>\r\n                  <div *ngIf=\"password.errors.minlength\">\r\n                    Password must be at least 6 characters\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <button class=\"btn btn-primary btn-block\">\r\n                  Login\r\n                </button>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && isLoginFailed\">\r\n                  Login failed: {{ errorMessage }}\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\r\n              Logged in as {{ roles }}.\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'calculadora-costes-page',\r\n  templateUrl: './calculadora-costes.page.html',\r\n  styleUrls: ['./calculadora-costes.page.scss']\r\n})\r\nexport class CalculadoraDeCostesPage implements OnInit {\r\n\r\n  businessTypes = ['Hostelería'];\r\n  business;\r\n\r\n  form: any = {};\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n\r\n  constructor(private authService: AuthService) {\r\n  }\r\n\r\n\r\n  navigateToBusiness() {\r\n    location.href = '#business';\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-lg-12 ml-auto top-30\">\r\n    <p class=\"lead\">La calculadora de costes para Stratups te permite calcular de modo fácil la\r\n      viabilidad de tu proyecto. Primero de todo elige el tipo de proyecto que quiere emprender\r\n    </p>\r\n  </div>\r\n\r\n</div>\r\n\r\n<select name=\"business\" class=\"form-control\" [(ngModel)]=\"business\"\r\n  (ngModelChange)=\"navigateToBusiness()\">\r\n\r\n  <option *ngFor=\"let business of businessTypes\" [value]=\"business\">\r\n    {{ business }}\r\n  </option>\r\n</select>\r\n\r\n<div class=\"top-30\" id=\"business\">\r\n  <business-hosteleria *ngIf=\"business == 'Hostelería'\"></business-hosteleria>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'calculadora-precios-page',\r\n  templateUrl: './calculadora-precios.page.html',\r\n  styleUrls: ['./calculadora-precios.page.scss']\r\n})\r\nexport class CalculadoraDePreciosPage implements OnInit {\r\n\r\n  costs = {\r\n    rawMaterial: null,\r\n    handling: null\r\n  };\r\n  priceResult;\r\n\r\n  constructor() { }\r\n\r\n  calculatePrice() {\r\n    this.priceResult = this.costs.rawMaterial + this.costs.handling;\r\n  }\r\n\r\n  calcAgain() {\r\n    delete this.priceResult;\r\n    this.costs = {\r\n      rawMaterial: null,\r\n      handling: null\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container top-30\">\r\n  <!-- Contact Section Heading-->\r\n  <h2 class=\"page-section-heading text-center text-uppercase text-secondary mb-0\">Calculadora de\r\n    precios</h2>\r\n  <!-- Icon Divider-->\r\n  <div class=\"divider-custom\">\r\n    <div class=\"divider-custom-line\"></div>\r\n    <div class=\"divider-custom-icon\"><i class=\"fas fa-star\"></i></div>\r\n    <div class=\"divider-custom-line\"></div>\r\n  </div>\r\n  <!-- Contact Section Form-->\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-8 mx-auto\">\r\n      <!-- To configure the contact form email address, go to mail/contact_me.php and update the email address in the PHP file on line 19.-->\r\n      <form id=\"contactForm\">\r\n        <div class=\"control-group\">\r\n          <div class=\"form-group floating-label-form-group controls mb-0 pb-2\">\r\n            <label>Costo Materia prima</label>\r\n            <input class=\"form-control\" id=\"rawMaterial\" type=\"text\"\r\n              placeholder=\"Costo Materia prima\" [(ngModel)]=\"costs.rawMaterial\" name=\"rawMaterial\">\r\n          </div>\r\n        </div>\r\n        <div class=\"control-group\">\r\n          <div class=\"form-group floating-label-form-group controls mb-0 pb-2\">\r\n            <label>Costo manipulación</label>\r\n            <input class=\"form-control\" id=\"handling\" type=\"number\" placeholder=\"Costo manipulación\"\r\n              [(ngModel)]=\"costs.handling\" name=\"handling\">\r\n          </div>\r\n        </div>\r\n        <br />\r\n\r\n        <div class=\"form-group\"><button class=\"btn btn-primary btn-xl\" id=\"calculateCosts\"\r\n            (click)=\"calculatePrice()\">Calcular</button></div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<section *ngIf=\"priceResult\" class=\"page-section bg-primary text-white mb-0\" id=\"about\">\r\n  <div class=\"container\">\r\n    <!-- About Section Heading-->\r\n    <h2 class=\"page-section-heading text-center text-uppercase text-white\">Resultado</h2>\r\n    <!-- Icon Divider-->\r\n    <div class=\"divider-custom divider-light\">\r\n      <div class=\"divider-custom-line\"></div>\r\n      <div class=\"divider-custom-icon\"><i class=\"fas fa-star\"></i></div>\r\n      <div class=\"divider-custom-line\"></div>\r\n    </div>\r\n    <!-- About Section Content-->\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 ml-auto text-center\">\r\n        <p class=\"lead\">El precio por unidad sería: {{priceResult}}</p>\r\n      </div>\r\n\r\n    </div>\r\n    <!-- About Section Button-->\r\n    <div class=\"text-center mt-4\">\r\n      <div class=\"btn btn-xl btn-outline-light\" (click)=\"calcAgain()\">\r\n        Volver a calcular\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-page',\r\n  templateUrl: './contact.page.html',\r\n  styleUrls: ['./contact.page.scss']\r\n})\r\nexport class ContactPage implements OnInit {\r\n  name: string;\r\n  email: string;\r\n  message: string;\r\n  thanks: boolean = false;\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  contactMe() {\r\n    let self = this;\r\n    $.post('/assets/php/mail.php', {\r\n      email: this.email,\r\n      name: this.name,\r\n      message: this.message\r\n    }).then(function (value) {\r\n      self.thanks = true; // Success!\r\n    }, function (reason) {\r\n      self.thanks = true; // Error!\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- Contact Section-->\r\n<section class=\"page-section\" id=\"contact\">\r\n  <div class=\"container\">\r\n    <!-- Contact Section Heading-->\r\n    <h2 class=\"page-section-heading text-center text-uppercase text-secondary mb-0\">Contacto</h2>\r\n    <!-- Icon Divider-->\r\n    <div class=\"divider-custom\">\r\n      <div class=\"divider-custom-line\"></div>\r\n      <div class=\"divider-custom-icon\"><i class=\"fas fa-star\"></i></div>\r\n      <div class=\"divider-custom-line\"></div>\r\n    </div>\r\n    <!-- Contact Section Form-->\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-8 mx-auto\">\r\n        <form id=\"contactForm\" name=\"sentMessage\" novalidate=\"novalidate\">\r\n          <div class=\"control-group\">\r\n            <div class=\"form-group floating-label-form-group controls mb-0 pb-2\">\r\n              <label>Nombre</label>\r\n              <input class=\"form-control\" id=\"name\" type=\"text\" placeholder=\"Nombre\"\r\n                required=\"required\" [(ngModel)]=\"name\" [ngModelOptions]=\"{standalone: true}\"\r\n                data-validation-required-message=\"Por favor, dinos como te llamas\" />\r\n              <p class=\"help-block text-danger\"></p>\r\n            </div>\r\n          </div>\r\n          <div class=\"control-group\">\r\n            <div class=\"form-group floating-label-form-group controls mb-0 pb-2\">\r\n              <label>Dirección de mail</label>\r\n              <input class=\"form-control\" id=\"email\" type=\"email\" placeholder=\"Dirección de mail\"\r\n                required=\"required\" [(ngModel)]=\"email\" [ngModelOptions]=\"{standalone: true}\"\r\n                data-validation-required-message=\"Por favor, danos tu dirección de mail.\" />\r\n              <p class=\"help-block text-danger\"></p>\r\n            </div>\r\n          </div>\r\n          <div class=\"control-group\">\r\n            <div class=\"form-group floating-label-form-group controls mb-0 pb-2\">\r\n              <label>Mensaje</label>\r\n              <textarea class=\"form-control\" id=\"message\" rows=\"5\" placeholder=\"Mensaje\"\r\n                required=\"required\" [(ngModel)]=\"message\" [ngModelOptions]=\"{standalone: true}\"\r\n                data-validation-required-message=\"¿Qué nos quieres contar?\"></textarea>\r\n              <p class=\"help-block text-danger\"></p>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div id=\"success\"></div>\r\n          <div class=\"form-group\"><button class=\"btn btn-primary btn-xl btn-block\"\r\n              id=\"sendMessageButton\" (click)=\"contactMe()\">Enviar</button></div>\r\n        </form>\r\n        <div *ngIf=\"thanks\">Gracias por tu ayuda. Tendremos en cuenta tus comentarios</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>","export { CalculadoraDeCostesPage } from '@pages/calculadora-costes/calculadora-costes.page';\r\nexport { CalculadoraDePreciosPage } from '@pages/calculadora-precios/calculadora-precios.page';\r\nexport { ContactPage } from '@pages/contact/contact.page';\r\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from '../../../_services/token-storage.service';\n\n@Component({\n  selector: 'profile-page',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss']\n})\nexport class ProfilePage implements OnInit {\n\n\n  currentUser: any;\n\n  constructor(private token: TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.token.getUser();\n  }\n\n}\n","<div class=\"container\" *ngIf=\"currentUser; else loggedOut\">\n  <header class=\"jumbotron\">\n    <h3>\n      <strong>{{ currentUser.username }}</strong> Profile\n    </h3>\n  </header>\n  <p>\n    <strong>Token:</strong>\n    {{ currentUser.accessToken.substring(0, 20) }} ...\n    {{ currentUser.accessToken.substr(currentUser.accessToken.length - 20) }}\n  </p>\n  <p>\n    <strong>Email:</strong>\n    {{ currentUser.email }}\n  </p>\n  <strong>Roles:</strong>\n  <ul>\n    <li *ngFor=\"let role of currentUser.roles\">\n      {{ role }}\n    </li>\n  </ul>\n</div>\n\n<ng-template #loggedOut>\n  Please login.\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../_services/auth.service';\n\n@Component({\n  selector: 'register-page',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss']\n})\nexport class RegisterPage implements OnInit {\n\n  form: any = {};\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n\n  onSubmit(): void {\n    this.authService.register(this.form).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n\n}","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <img id=\"profile-img\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n      class=\"profile-img-card\" />\n    <form *ngIf=\"!isSuccessful\" name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\"\n      novalidate>\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"form.username\" required\n          minlength=\"3\" maxlength=\"20\" #username=\"ngModel\" />\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && username.invalid\">\n          <div *ngIf=\"username.errors.required\">Username is required</div>\n          <div *ngIf=\"username.errors.minlength\">\n            Username must be at least 3 characters\n          </div>\n          <div *ngIf=\"username.errors.maxlength\">\n            Username must be at most 20 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" class=\"form-control\" name=\"email\" [(ngModel)]=\"form.email\" required\n          email #email=\"ngModel\" />\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && email.invalid\">\n          <div *ngIf=\"email.errors.required\">Email is required</div>\n          <div *ngIf=\"email.errors.email\">\n            Email must be a valid email address\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"form.password\"\n          required minlength=\"6\" #password=\"ngModel\" />\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && password.invalid\">\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">Sign Up</button>\n      </div>\n\n      <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n        Signup failed!<br />{{ errorMessage }}\n      </div>\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n      Your registration is successful!\n    </div>\n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}